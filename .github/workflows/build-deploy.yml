   
name: build-deploy

on:
  push:
    branches: [ feature/portless-deployment ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
        
    - name: Build
      run: go build -v cmd/zracni-udar-service/main.go

    - name: Set SHA
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short $GITHUB_SHA)"
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        platforms: linux/arm64
        context: .
        file: ./Dockerfile
        push: true 
        tags: horvatic/zracni-udar-service:${{ steps.vars.outputs.sha_short }}
    
    - name: 'Save Sha'
      run: echo "$GITHUB_SHA" >> deploy/GITHUB_SHA

    - name: 'Save Branch'
      run: echo "$GITHUB_REF" >> deploy/BRANCH_NAME

    - name: 'Save Short Sha'
      env:
        DEPLOYMENT_GITSHORTSHA: ${{ steps.vars.outputs.sha_short }}
      run: echo "$DEPLOYMENT_GITSHORTSHA" >> deploy/GITHUB_SHORT_SHA


    - name: 'Upload Deploy'
      uses: actions/upload-artifact@v2
      with:
        name: deploy
        path: deploy
        retention-days: 5

  dev:
    name: Deploy To Dev
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16


    - name: Download Deploy
      uses: actions/download-artifact@v2
      with:
        name: deploy
      
    - name: 'Set Sha and Branch Name'
      id: vars
      run: |
        echo "::set-output name=deploy_git_sha::$(cat GITHUB_SHA)"
        echo "::set-output name=deploy_git_short_sha::$(cat GITHUB_SHORT_SHA)"
        echo "::set-output name=deploy_branch_name::$(cat BRANCH_NAME)"

    - name: Deploy
      env: 
        DEPLOYMENT_MONGO_CONNECTION_STRING: ${{ secrets.DEPLOYMENT_MONGO_CONNECTION_STRING }}
        DEPLOYMENT_MONGO_DATABASE: ${{ secrets.DEPLOYMENT_MONGO_DATABASE }}
        DEPLOYMENT_MONGO_COLLECTION: ${{ secrets.DEPLOYMENT_MONGO_COLLECTION }}
        DEPLOYMENT_ENV: "dev"
        DEPLOYMENT_GITSHA: ${{ steps.vars.outputs.deploy_git_sha }}
        DEPLOYMENT_GIT_SHORT_SHA: ${{ steps.vars.outputs.deploy_git_short_sha }}
        DEPLOYMENT_BRANCH_NAME: ${{ steps.vars.outputs.deploy_branch_name }}
      run: |
        cd scripts/update 
        go mod tidy
        go run main.go
